%h2 #{@tag_deployment.tag.to_label}
%h2 #{@tag_deployment.date_range}

#tag_deployment_info

    %table{:class => "dotted"}
        %tbody
            %tr
                %td{:class => "label"}
                    Tag
                %td
                    = link_to "Link", tag_path(@tag_deployment.tag)
            %tr
                %td{:class => "label"}
                    Model
                %td
                    = @tag_deployment.tag.model
            %tr
                %td{:class => "label"}
                    Serial
                %td
                    = @tag_deployment.tag.serial
            %tr
                %td{:class => "label"}
                    Manufacturer
                %td
                    = @tag_deployment.tag.manufacturer

    %br
    %br

    %table{:class => "dotted"}
        %tbody
            %tr
                %td{:class => "label"}
                    Total Hits
                %td
                    = @tag_deployment.hits.count
            %tr
                %td{:class => "label"}
                    Receivers with Hits
                %td
                    = @tag_deployment.receiver_deployments.uniq.count
            %tr
                %td{:class => "label"}
                    Report
                %td
                    - if @tag_deployment.report
                        = link_to "Link", report_path(@tag_deployment.report)

    %br
    %br

    %table{:class => "dotted"}
        %tbody
            %tr
                %td{:class => "label"}
                    Study that deployed tag
                %td
                    = link_to @tag_deployment.study.code, study_path(@tag_deployment.study)
            - @tag_deployment.display_attributes.each do |k,v|
                %tr
                    %td{:class => "label"}
                        = k.humanize
                    %td
                        = v

#right

    #tag_deployment_map

    #tag_deployment_list
        %table{:class => "listing"}
            %thead
                %tr
                    %th Hit
                    %th Time
                    %th Lat
                    %th Lon
                    %th Receiver
            %tbody

    .clear

:javascript

    var path;
    var geo;
    var map;
    var sm;
    var selectControl;
    var starting;
    var ending;

    function isIE () {
      var myNav = navigator.userAgent.toLowerCase();
      return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : false;
    }
    var is_ie = isIE();

    $(document).ready(function() {

        var proj900913 = new OpenLayers.Projection("EPSG:900913");
        var proj4326   = new OpenLayers.Projection("EPSG:4326");

        path = new OpenLayers.Layer.PointTrack("Path", {
                    styleMap        : sm
                    ,projection     : proj4326
                    ,rendererOptions: { zIndexing: true }
                });

        sm =  new OpenLayers.StyleMap({
                'default' : new OpenLayers.Style(OpenLayers.Util.applyDefaults({
                     pointRadius     : 3
                    ,fillColor       : '#e8bb99' 
                    ,fillOpacity     : 0.7
                    ,strokeWidth     : 1
                    ,strokeColor     : '#b56529'
                    ,strokeOpacity   : 1
                }))
                ,'select' : new OpenLayers.Style(OpenLayers.Util.applyDefaults({
                     pointRadius     : 5
                    ,fillColor       : '#99e9ae'
                    ,fillOpacity     : 0.7
                    ,strokeWidth     : 1
                    ,strokeColor     : '#1d8538'
                    ,strokeOpacity   : 1
                    ,graphicZIndex   : 1
                }))
                ,'temporary' : new OpenLayers.Style(OpenLayers.Util.applyDefaults({
                     pointRadius     : 3
                    ,fillColor       : '#99BBE8'
                    ,fillOpacity     : 0.7
                    ,strokeWidth     : 1
                    ,strokeColor     : '#1558BB'
                    ,strokeOpacity   : 1
                }))
        });

        geo = new OpenLayers.Layer.Vector("Hits", {
                    strategies      : [new OpenLayers.Strategy.Fixed()]
                    ,styleMap       : sm
                    ,projection     : proj4326
                    ,rendererOptions: { zIndexing: true }
                    ,protocol       : new OpenLayers.Protocol.HTTP({
                        url: "#{tag_deployment_path(@tag_deployment.id, :format => :geo)}"
                        ,format: new OpenLayers.Format.GeoJSON()
                    })
                });

        geo.events.register('loadend', geo, function(evt) {
            map.zoomToExtent(geo.getDataExtent());
            // Populate the list table
            for(var i = 0 ; i < geo.features.length ; i++) {
                pt = geo.features[i].geometry.clone().transform(proj900913, proj4326);
                $("#tag_deployment_list").find("tbody").append(
                    "<tr> \
                        <td>" + (i + 1) + "</td> \
                        <td>" + geo.features[i].attributes.time + "</td> \
                        <td>" + pt.y + "</td> \
                        <td>" + pt.x + "</td> \
                        <td>" + geo.features[i].attributes.receiver_deployment.code + "</td> \
                    </tr>"
                );
            }

            if (!is_ie) {
              $("#right").disableSelection();
            }

            $(".listing tr").not(':first')
                .mousedown(function(x) {
                    starting = this.rowIndex - 1;
                    $(".listing tr").not(':first').children("td").removeClass("active");

                    $(".listing tr").not(':first').bind('mouseover',
                        function(e) {
                            ending = this.rowIndex - 1;

                            // Select rows
                            min = Math.min(starting,ending);
                            max = Math.max(starting,ending);
                            selectControl.unselectAll();

                            trs = $(".listing tr").not(':first');
                            $(trs).children("td").removeClass("active");
                            for (var i = min ; i <= max ; i++) {
                                $(trs[i]).children("td").addClass("active");
                                selectControl.select(geo.features[i]);
                            }
                            path.removeAllFeatures();
                            path.addNodes(geo.features.slice(min,max+1));
                        }
                    );
                    $(this).trigger('mouseover');
                })
                .mouseup(function() {
                    $(".listing tr").not(':first').unbind('mouseover');
                });

        });

        map = new OpenLayers.Map("tag_deployment_map", {
            projection          : proj900913
            ,displayProjection  : proj4326
            ,units              : "m"
            ,layers             : [
                new OpenLayers.Layer.Google('Google Satellite',{
                    type          : google.maps.MapTypeId.SATELLITE
                    ,projection    : proj900913
                })
                ,new OpenLayers.Layer.Google('Google Map',{
                    type          : google.maps.MapTypeId.MAP
                    ,projection    : proj900913
                })
                ,geo
                ,path
            ]
        });

        map.addControl(new OpenLayers.Control.LayerSwitcher());
        selectControl = new OpenLayers.Control.SelectFeature(geo);
        
        map.addControl(selectControl);
        selectControl.activate();
    });

= javascript_include_tag 'http://maps.google.com/maps/api/js?sensor=false'
= javascript_include_tag '/javascripts/OpenLayers.js'
